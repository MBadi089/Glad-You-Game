{"version":3,"sources":["utils/auth.js","components/Nav/index.js","App.js","index.js"],"names":["decode","this","getToken","token","isTokenExpired","exp","Date","now","err","localStorage","getItem","idToken","setItem","window","location","assign","removeItem","AppNavbar","useState","showModal","setShowModal","Navbar","bg","variant","expand","Container","fluid","Brand","as","Link","to","Toggle","aria-controls","Collapse","id","Nav","className","Auth","loggedIn","onClick","logout","Modal","size","show","onHide","aria-labelledby","Tab","defaultActiveKey","Header","closeButton","Title","Item","eventKey","Body","Content","httpLink","createHttpLink","uri","authLink","setContext","_","headers","authorization","client","ApolloClient","link","concat","cache","InMemoryCache","App","ApolloProvider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAsCe,M,0FAnCb,WACE,OAAOA,IAAOC,KAAKC,c,sBAGrB,WACE,IAAMC,EAAQF,KAAKC,WACnB,QAASC,IAAUF,KAAKG,eAAeD,K,4BAGzC,SAAeA,GACb,IAEE,OADgBH,IAAOG,GACXE,IAAMC,KAAKC,MAAQ,IAG/B,MAAOC,GACP,OAAO,K,sBAIX,WACE,OAAOC,aAAaC,QAAQ,c,mBAG9B,SAAMC,GACJF,aAAaG,QAAQ,WAAYD,GACjCE,OAAOC,SAASC,OAAO,O,oBAGzB,WACEN,aAAaO,WAAW,YACxBH,OAAOC,SAASC,OAAO,S,MC0CZE,EApEG,WAEhB,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEA,OACE,oCACE,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACtC,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACd,kBAACL,EAAA,EAAOM,MAAR,CAAcC,GAAIC,IAAMC,GAAG,KAA3B,iBAGA,kBAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,WAC7B,kBAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,UAClB,kBAACC,EAAA,EAAD,CAAKC,UAAU,WACb,kBAACD,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,KAAvB,UAICO,EAAKC,WACJ,oCACE,kBAACH,EAAA,EAAIN,KAAL,CAAUD,GAAIC,IAAMC,GAAG,UAAvB,eAGA,kBAACK,EAAA,EAAIN,KAAL,CAAUU,QAASF,EAAKG,QAAxB,WAGF,kBAACL,EAAA,EAAIN,KAAL,CAAUU,QAAS,kBAAMnB,GAAa,KAAtC,aAOV,kBAACqB,EAAA,EAAD,CACEC,KAAK,KACLC,KAAMxB,EACNyB,OAAQ,kBAAMxB,GAAa,IAC3ByB,kBAAgB,gBAEhB,kBAACC,EAAA,EAAIrB,UAAL,CAAesB,iBAAiB,SAC9B,kBAACN,EAAA,EAAMO,OAAP,CAAcC,aAAW,GACvB,kBAACR,EAAA,EAAMS,MAAP,CAAahB,GAAG,gBACd,kBAACC,EAAA,EAAD,CAAKZ,QAAQ,SACX,kBAACY,EAAA,EAAIgB,KAAL,KACE,kBAAChB,EAAA,EAAIN,KAAL,CAAUuB,SAAS,SAAnB,UAEF,kBAACjB,EAAA,EAAIgB,KAAL,KACE,kBAAChB,EAAA,EAAIN,KAAL,CAAUuB,SAAS,UAAnB,eAKR,kBAACX,EAAA,EAAMY,KAAP,KACE,kBAACP,EAAA,EAAIQ,QAAL,W,2CCpDNC,EAAWC,YAAe,CAC9BC,IAAK,aAIDC,EAAWC,aAAW,SAACC,EAAD,GAAqB,IAAfC,EAAc,EAAdA,QAC1B1D,EAAQM,aAAaC,QAAQ,YACnC,MAAO,CACLmD,QAAQ,2BACHA,GADE,IAELC,cAAe3D,EAAK,iBAAaA,GAAU,SAM3C4D,EAAS,IAAIC,IAAa,CAE9BC,KAAMP,EAASQ,OAAOX,GAEtBY,MAAO,IAAIC,MAoBEC,MAjBf,WACE,OACE,kBAACC,EAAA,EAAD,CAAgBP,OAAQA,GACtB,kBAAC,IAAD,KACA,oCACE,kBAAC,EAAD,UChCRQ,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.a161408a.chunk.js","sourcesContent":["import decode from 'jwt-decode';\n\nclass AuthService {\n  getProfile() {\n    return decode(this.getToken());\n  }\n\n  loggedIn() {\n    const token = this.getToken();\n    return !!token && !this.isTokenExpired(token);\n  }\n\n  isTokenExpired(token) {\n    try {\n      const decoded = decode(token);\n      if (decoded.exp < Date.now() / 1000) {\n        return true;\n      } else return false;\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getToken() {\n    return localStorage.getItem('id_token');\n  }\n\n  login(idToken) {\n    localStorage.setItem('id_token', idToken);\n    window.location.assign('/');\n  }\n\n  logout() {\n    localStorage.removeItem('id_token');\n    window.location.assign('/');\n  }\n}\n\nexport default new AuthService();","import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Navbar, Nav, Container, Modal, Tab } from 'react-bootstrap';\n// import SignUpForm from './SignupForm';\n// import LoginForm from './LoginForm';\n\nimport Auth from '../../utils/auth';\n\nconst AppNavbar = () => {\n  // set modal display state\n  const [showModal, setShowModal] = useState(false);\n\n  return (\n    <>\n      <Navbar bg='dark' variant='dark' expand='lg'>\n        <Container fluid>\n          <Navbar.Brand as={Link} to='/'>\n            Glad You Game\n          </Navbar.Brand>\n          <Navbar.Toggle aria-controls='navbar' />\n          <Navbar.Collapse id='navbar'>\n            <Nav className='ml-auto'>\n              <Nav.Link as={Link} to='/'>\n                Search\n              </Nav.Link>\n              {/* if user is logged in show saved games and logout */}\n              {Auth.loggedIn() ? (\n                <>\n                  <Nav.Link as={Link} to='/saved'>\n                    Saved Games\n                  </Nav.Link>\n                  <Nav.Link onClick={Auth.logout}>Logout</Nav.Link>\n                </>\n              ) : (\n                <Nav.Link onClick={() => setShowModal(true)}>Login</Nav.Link>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n      {/* set modal data up */}\n      <Modal\n        size='lg'\n        show={showModal}\n        onHide={() => setShowModal(false)}\n        aria-labelledby='signup-modal'>\n        {/* tab container to do either signup or login component */}\n        <Tab.Container defaultActiveKey='login'>\n          <Modal.Header closeButton>\n            <Modal.Title id='signup-modal'>\n              <Nav variant='pills'>\n                <Nav.Item>\n                  <Nav.Link eventKey='login'>Login</Nav.Link>\n                </Nav.Item>\n                <Nav.Item>\n                  <Nav.Link eventKey='signup'>Sign Up</Nav.Link>\n                </Nav.Item>\n              </Nav>\n            </Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Tab.Content>\n              {/* <Tab.Pane eventKey='login'>\n                <LoginForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane>\n              <Tab.Pane eventKey='signup'>\n                <SignUpForm handleModalClose={() => setShowModal(false)} />\n              </Tab.Pane> */}\n            </Tab.Content>\n          </Modal.Body>\n        </Tab.Container>\n      </Modal>\n    </>\n  );\n};\n\nexport default AppNavbar;","import React from 'react';\n// import SearchGames from './pages/SearchGames';\n// import SavedGames from './pages/SavedGames';\nimport Navbar from './components/Nav';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { ApolloProvider, ApolloClient, InMemoryCache, createHttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\n\n// establish a new link to the GraphQL server\nconst httpLink = createHttpLink({\n  uri: '/graphql'\n});\n\n// login authorization\nconst authLink = setContext((_, { headers }) => {\n  const token = localStorage.getItem('id_token');\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    }\n  };\n});\n\n// instantiate the Apollo Client instance\nconst client = new ApolloClient({\n  // create the connection to the API endpoint\n  link: authLink.concat(httpLink),\n  // instantiate a new cache object\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n      <>\n        <Navbar />\n        {/* <Switch>\n          <Route exact path='/' component={SearchGames} />\n          <Route exact path='/saved' component={SavedGames} />\n          <Route render={() => <h1 className='display-2'>Wrong page!</h1>} />\n        </Switch> */}\n      </>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}